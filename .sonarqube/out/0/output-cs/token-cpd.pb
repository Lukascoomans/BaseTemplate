¯
QC:\Users\Lukas\source\repos\BaseTemplate\Controllers\WeatherForecastController.cs
	namespace

 	
BaseTemplate


 
.

 
Controllers

 "
{ 
[ 
ApiController 
] 
[ 
Route 

(
 
$str 
) 
] 
public 

class %
WeatherForecastController *
:+ ,
ControllerBase- ;
{ 
private 
static 
readonly 
string  &
[& '
]' (
	Summaries) 2
=3 4
new5 8
[8 9
]9 :
{ 	
$str 
, 
$str !
,! "
$str# +
,+ ,
$str- 3
,3 4
$str5 ;
,; <
$str= C
,C D
$strE L
,L M
$strN S
,S T
$strU a
,a b
$strc n
} 	
;	 

private 
readonly 
ILogger  
<  !%
WeatherForecastController! :
>: ;
_logger< C
;C D
static 
readonly 
string 
[ 
]  
scopeRequiredByApi! 3
=4 5
new6 9
string: @
[@ A
]A B
{C D
$strE U
}V W
;W X
public %
WeatherForecastController (
(( )
ILogger) 0
<0 1%
WeatherForecastController1 J
>J K
loggerL R
)R S
{ 	
_logger 
= 
logger 
; 
} 	
[ 	
HttpGet	 
] 
public   
IEnumerable   
<   
WeatherForecast   *
>  * +
Get  , /
(  / 0
)  0 1
{!! 	
var## 
rng## 
=## 
new## 
Random##  
(##  !
)##! "
;##" #
return$$ 

Enumerable$$ 
.$$ 
Range$$ #
($$# $
$num$$$ %
,$$% &
$num$$' (
)$$( )
.$$) *
Select$$* 0
($$0 1
index$$1 6
=>$$7 9
new$$: =
WeatherForecast$$> M
{%% 
Date&& 
=&& 
DateTime&& 
.&&  
Now&&  #
.&&# $
AddDays&&$ +
(&&+ ,
index&&, 1
)&&1 2
,&&2 3
TemperatureC'' 
='' 
rng'' "
.''" #
Next''# '
(''' (
-''( )
$num'') +
,''+ ,
$num''- /
)''/ 0
,''0 1
Summary(( 
=(( 
	Summaries(( #
[((# $
rng(($ '
.((' (
Next((( ,
(((, -
	Summaries((- 6
.((6 7
Length((7 =
)((= >
]((> ?
})) 
))) 
.** 
ToArray** 
(** 
)** 
;** 
}++ 	
},, 
}-- ç

3C:\Users\Lukas\source\repos\BaseTemplate\Program.cs
	namespace

 	
BaseTemplate


 
{ 
public 

class 
Program 
{ 
public 
static 
void 
Main 
(  
string  &
[& '
]' (
args) -
)- .
{ 	
CreateHostBuilder 
( 
args "
)" #
.# $
Build$ )
() *
)* +
.+ ,
Run, /
(/ 0
)0 1
;1 2
} 	
public 
static 
IHostBuilder "
CreateHostBuilder# 4
(4 5
string5 ;
[; <
]< =
args> B
)B C
=>D F
Host 
.  
CreateDefaultBuilder %
(% &
args& *
)* +
. $
ConfigureWebHostDefaults )
() *

webBuilder* 4
=>5 7
{ 

webBuilder 
. 

UseStartup )
<) *
Startup* 1
>1 2
(2 3
)3 4
;4 5
} 
) 
; 
} 
} Æ
3C:\Users\Lukas\source\repos\BaseTemplate\Startup.cs
	namespace 	
BaseTemplate
 
{ 
public 

class 
Startup 
{ 
public 
Startup 
( 
IConfiguration %
configuration& 3
)3 4
{ 	
Configuration 
= 
configuration )
;) *
} 	
public 
IConfiguration 
Configuration +
{, -
get. 1
;1 2
}3 4
public 
void 
ConfigureServices %
(% &
IServiceCollection& 8
services9 A
)A B
{ 	
services   
.   
AddAuthentication   &
(  & '
JwtBearerDefaults  ' 8
.  8 9 
AuthenticationScheme  9 M
)  M N
.!! &
AddMicrosoftIdentityWebApi!! +
(!!+ ,
Configuration!!, 9
.!!9 :

GetSection!!: D
(!!D E
$str!!E N
)!!N O
)!!O P
;!!P Q
services## 
.## 
AddControllers## #
(### $
)##$ %
;##% &
services$$ 
.$$ 
AddSwaggerGen$$ "
($$" #
c$$# $
=>$$% '
{%% 
c&& 
.&& 

SwaggerDoc&& 
(&& 
$str&& !
,&&! "
new&&# &
OpenApiInfo&&' 2
{&&3 4
Title&&5 :
=&&; <
$str&&= K
,&&K L
Version&&M T
=&&U V
$str&&W [
}&&\ ]
)&&] ^
;&&^ _
}'' 
)'' 
;'' 
}(( 	
public++ 
void++ 
	Configure++ 
(++ 
IApplicationBuilder++ 1
app++2 5
,++5 6
IWebHostEnvironment++7 J
env++K N
)++N O
{,, 	
if-- 
(-- 
env-- 
.-- 
IsDevelopment-- !
(--! "
)--" #
)--# $
{.. 
app// 
.// %
UseDeveloperExceptionPage// -
(//- .
)//. /
;/// 0
app00 
.00 

UseSwagger00 
(00 
)00  
;00  !
app11 
.11 
UseSwaggerUI11  
(11  !
c11! "
=>11# %
c11& '
.11' (
SwaggerEndpoint11( 7
(117 8
$str118 R
,11R S
$str11T e
)11e f
)11f g
;11g h
}22 
app44 
.44 
UseHttpsRedirection44 #
(44# $
)44$ %
;44% &
app66 
.66 

UseRouting66 
(66 
)66 
;66 
app88 
.88 
UseAuthentication88 !
(88! "
)88" #
;88# $
app99 
.99 
UseAuthorization99  
(99  !
)99! "
;99" #
app;; 
.;; 
UseEndpoints;; 
(;; 
	endpoints;; &
=>;;' )
{<< 
	endpoints== 
.== 
MapControllers== (
(==( )
)==) *
;==* +
}>> 
)>> 
;>> 
}?? 	
}@@ 
}AA ¡
;C:\Users\Lukas\source\repos\BaseTemplate\WeatherForecast.cs
	namespace 	
BaseTemplate
 
{ 
public 

class 
WeatherForecast  
{ 
public 
DateTime 
Date 
{ 
get "
;" #
set$ '
;' (
}) *
public		 
int		 
TemperatureC		 
{		  !
get		" %
;		% &
set		' *
;		* +
}		, -
public 
int 
TemperatureF 
=>  "
$num# %
+& '
(( )
int) ,
), -
(- .
TemperatureC. :
/; <
$num= C
)C D
;D E
public 
string 
Summary 
{ 
get  #
;# $
set% (
;( )
}* +
} 
} 